======================================================================((1))===================================================================================================================
CODE-1:Develop a Function to check if two numbers are equal without using arithmetic operators or comparison operators. 

#include "pch.h"
#include <iostream>

using namespace std;

void comparing(int, int);

int main()
{
	int a{}, b{};

	cout << "Enter first number: ";
	cin >> a;
	cout << endl << "Enter second number: ";
	cin >> b;

	comparing(a, b);

}

void comparing(int a, int b) {
	if ((a ^ b)) {
		cout << "The two numbers are Different. ";
	}
	else {
		cout << "The two numbers are Same.";
	}
	cout << endl;
}
======================================================================((2))===================================================================================================================
CODE-2:Write a program to display the following output using a single cout statement.

   Subject            Marks
   Mathematics     	90 
   Computer         77 
   Chemistry        69

#include "pch.h"
#include <iostream>
#include<string>

using namespace std;

string getMarkList();

int main()
{
	string markList;
	markList = getMarkList();
	cout << markList;
}

string getMarkList() {
	string markList;
	markList = "Subject\t\t\tMarks\n";
	markList += "Mathematics\t\t 90\n";
	markList += "Computer\t\t 77\n";
	markList += "Chemistry\t\t 69\n";
	return markList;
}

======================================================================((3))===================================================================================================================
CODE-3:Write a program to print all natural numbers upto N without using semi-colon.

#include "pch.h"
#include <iostream>

#define N 50

int main(int i)
{
	
	if (i <= N && (std::cout<<i) &&(std::cout<<"\n") && main(i + 1))
	{
	}
}

======================================================================((4))===================================================================================================================
CODE-4:Write a program which accept principle, rate and time from user and print the simple interest.

#include "pch.h"
#include <iostream>

using namespace std;

double getSimpleInterest(double, double, int);

int main()
{
	double p, r,simpleInterest;
	int t;

	cout << "Enter Principle: ";
	cin >> p;
	cout << "\nEnter Rate: ";
	cin >> r;
	cout << "\nEnter Time(in years): ";
	cin >> t;

	simpleInterest = getSimpleInterest(p,r,t);
	cout << "\nSimple Interest: " << simpleInterest;
}

double getSimpleInterest(double principle, double rate, int time) {
	double a;
	a = (principle*rate * time);
	return a;
}
======================================================================((5))===================================================================================================================
CODE-5:Write a program which accept temperature in Farenheit and print it in centigrade
 
#include "pch.h"
#include <iostream>

using namespace std;

int main()
{
	float fahr, cel;
	
	//Converting Fahrenheit into Celsius
	cout << "Enter the temperature in Fahrenheit: ";
	cin >> fahr;

	cel = (fahr - 32) / 1.8; //conversion formula
	cout << "\nTemperature in degree Celsius: " << cel << " C" << endl;
	
	return 0;
}

======================================================================((6))=================================================
CODE-6:Write a program that takes an input of string and displays the reverse of the string. It should be a function that 
takes a char*  as arg and returns the char* with reversed value. 
 
#include "pch.h"
#include <iostream>
#include<cstdio>

using namespace std;

void revFunc(char *);

int main()
{
	char myString[30];

	cout << "Enter a string:";
	cin >> myString;
	cout << endl; 

	revFunc(myString);
	cout<<"Reverse of string is : "<<myString<<endl;
}

void revFunc(char *str) {
	char temp;
	int j{};
	j = strlen(str)-1;
	for (int i = 0;i <j;i++,j--) {  //--------reversing block
		temp = str[i];
		str[i] = str[j];
		str[j] = temp;
	}
	//return str;
}

======================================================================((7))==================================================
CODE-7:Write a program to check whether the given number is positive or negative (using ? : ternary operator )
  
#include "pch.h"
#include <iostream>

using namespace std;
int main()
{
	int input{};
	string ans;

	cout << "Enter a number: ";
	cin >> input;

	cout << "Entered number is: ";
	cout << ((input < 0) ? "Negative" : "Positive")<<endl;
}


======================================================================((8))==============================================
CODE-8: Write a C++ program to find the sum and average of one dimensional integer array.
   

#include "pch.h"
#include <iostream>

using namespace std;

int arrSize{};

void accept(int *,int);
void display(int *,int);
int sum(int *,int);
double avg(int,int);
int main()
{
	
	int *myArray= new int[arrSize];
	int eSum{};
	double eAvg;

	cout << "Enter number of elements: ";
	cin >> arrSize;

	cout << "Enter " << arrSize << " elements: ";
	accept(myArray,arrSize);

	cout << "Entered elements are: ";
	display(myArray, arrSize);

	eSum = sum(myArray,arrSize);
	eAvg = avg(eSum, arrSize);

	cout << "\nSum of elements: " << eSum;
	cout << "\nAverage of elements: " << eAvg;
}

void accept(int *arr, int aSize) {
	int element;
	for (int i = 0;i < aSize;i++) {
		cin >> element;
		arr[i] = element;
	}
}

void display(int *arr,int aSize) {
	for (int i = 0;i < aSize;i++) {
		
		cout<<arr[i]<<" ";
	}
}

int sum(int *arr, int aSize) {
	int aSum{};
	for (int i = 0;i < aSize;i++) {
		aSum += arr[i];
	}
	return aSum;
}

double avg(int aSum, int aSize) {
	double aAvg;
	aAvg = aSum / aSize;
	return aAvg;
}
======================================================================((9))==============================================
CODE-9: Write a menu driven C++ program with following option
a. Accept elements of an array
b. Display elements of an array

#include "pch.h"
#include <iostream>

using namespace std;

int arrSize{};
int *myArray = new int[arrSize];

void accept(int *, int);
void display(int *, int);

int main()
{
	
	int choice;
	bool processing{ true };

	do {
		cout << "<------ MENU ------>\nAdding Elements--------->Press 1\nDisplaying Elements----->Press 2\nExit ------------------->Press 0\n>> ";
		cin >> choice;
		switch (choice)
		{
		case 1:{
			cout << "Enter number of elements: ";
			cin >> arrSize;

			accept(myArray, arrSize);
			break;
		}
			
		case 2: {
			display(myArray, arrSize);
			cout << endl;
			break;
		}
		case 0: {
			break;
		}
		default: {
			
			cout << "Invalid Choice";
			
				break;
		}
		}
	} while (choice<3 && choice !=0 );
	
	
}

void accept(int *arr, int aSize) {
	int element;
	cout << "Enter the elements: "<<endl;
	for (int i = 0;i < aSize;i++) {
		cin >> element;
		arr[i] = element;
	}
}

void display(int *arr, int aSize) {
	for (int i = 0;i < aSize;i++) {

		cout << arr[i] << " ";
	}
}
======================================================================((10))==============================================
CODE-10: Develop a program to store employee objects into a file as CSV. It should be able to add, remove and update the 
values in the file.

#include<iostream>
#include<string>
#include<fstream>
#include<ostream>
using namespace std;
void InsertData(int eno, string ename, string emob);
int GetEmployeeNumber()
{
	int count = 1;
	ifstream ifs;
	string filename = "EmployeeData.csv";
	ifs.open(filename, ios::app);
	string line;
	while (getline(ifs, line))
		++count;
	return count;
}
void GetData()
{
	int eno = GetEmployeeNumber();
	string ename, emob;
	cout << "Enter Employee Name:";
	cin >> ename;
	cout << "Enter Employee Mobile Number:";
	cin >> emob;
	InsertData(eno, ename, emob);
	cout << "ENTRY DONE EMPLOYEE-ID:" << eno << endl;
}
void InsertData(int eno, string ename, string emob)
{
	ofstream ofs;
	string filename = "EmployeeData.csv";
	ofs.open(filename, ios::app);
	ofs << eno << "," << ename<< "," << emob << "\n";
}

string OptionsAvail()
{
	string menu;
	menu += "Welcome To Tata Consultancy Services Employee Records\n";
	menu += "Enter 1 to Add Employee\n";
	menu += "Enter 2 to Display Employee\n";
	menu += "Enter 3 to Delete Employee\n";
	menu += "Enter 4 to Exit\n";
	menu += "Whats Your Choice:";
	return menu;
}

void RetrieveData(int ena)
{
	ifstream ifs;
	string filename = "EmployeeData.csv";
	ifs.open(filename, ios::app);
	string ename, emobi, eno;
	while (ifs)
	{
		getline(ifs, eno, ',');
		getline(ifs, ename, ',');
		getline(ifs, emobi, '\n');
		int enumber = std::atoi(eno.c_str());
		if (enumber == ena)
		{
			cout << "Employee Name:" << ename << endl;
			cout << "Employee Mobile Number:" << emobi << endl;
		}
	}
}

void DeleteData(const char* filename,int enumber)
{
	string tempfilename = "Temp.csv";
	ifstream is(filename);
	ofstream ofs;
	ofs.open(tempfilename, ios::app);
	char c;
	int line_no = 1;
	while (is.get(c))
	{
		if (c == '\n')
			line_no++;
		if (line_no != enumber)
			ofs << c;
	}
	ofs.close();
	is.close();
	remove(filename);
	rename("Temp.csv", filename);
	cout << "Employee Removed"<<endl;
	
}


void main()
{
	int userinp, enumb;
	do
	{
		cout << OptionsAvail();
		cin >> userinp;
		switch (userinp)
		{
		case 1:
			GetData();
			break;
		case 2:
			cout << "Enter Employeee Id:";
			cin >> enumb;
			RetrieveData(enumb);
			
			break;
		case 3:
			cout << "Enter Empolyee Id:";
			cin >> enumb;
			DeleteData("EmployeeData.csv",enumb);

			break;
		case  4:
			cout << "Thanks For Visiting...!!!";
			break;
		default:
			cout << "Invalid Input";
			break;
		}
	} while (userinp != 4);
}
======================================================================((11))================================================
CODE-11: Write a function to calculate the factorial value of any integer as an argument. Call this function from main( ) 
and print the results in main( ). 

#include<iostream>
#include<conio.h>

using namespace std;


int factorial(int a) {
	if (a <= 1)
		return 1;
	else
		return (a * factorial(a - 1));
}
int main() {
	int n, ans;
	cout << "Enter number to find factorial: ";
	cin >> n;
	ans = factorial(n);
	cout << "Factorial of " << n << " is :" <<ans ;

	_getch();
	return 0;
}
======================================================================((12))================================================
CODE-12: Write a function called zero_small() that has two integer arguments being passed by reference and sets the smaller 
of the two numbers to 0. Write the main program to access the function. 

#include<iostream>
#include<conio.h>
using namespace std;

void zero_small(int *,int *);
void zero_small(int *c, int *d) {
	if (*c > *d) {
		*d = 0;
	}
	else {
		*c = 0;
	}
}


int main() {
	int a, b;

	cout << "Enter value for a: ";
	cin >> a;
	cout << "\nEnter value for b: ";
	cin >> b;
	zero_small(&a, &b);

	cout << "a = " << a;
	cout << "\nb = " << b;

	_getch();
	return 0;
}
======================================================================((13))==========================================================
CODE-13: Write a C++ program, which initializes a string variable to the content "Time is a great teacher but unfortunately it 
kills all its pupils. Berlioz" and outputs the string to the disk file OUT.TXT. you have to include all the header files if required.

#include<iostream>
#include<string>
#include<fstream>
using namespace std;

int main()
{
	string content;
	content="Time is a great teacher but unfortunately it kills all its pupils. Berlioz";
	ofstream filecreate;
	filecreate.open("OUT.txt");
	filecreate<<content;
	filecreate.close();
}
======================================================================((14))=======================================================
Write a function in C++ to count and display the number of lines not starting with alphabet 'A' present in a text file "STORY.TXT".
Example:
If the file "STORY.TXT" contains the following lines,
The rose is red.
A girl is playing there.
There is a playground.
An aeroplane is in the sky.
Numbers are not allowed in the password.

#include<iostream>                                             
#include<string>
#include<fstream>
using namespace std;

int main()
{
	fstream reader;
	reader.open("STORY.txt");
	string line;
	int count=0;
	while(!reader.eof())
	{
		getline(reader,line);
		if(line[0]!='A'&&line[0]!='a')
		{
		 count++;
		}
	}
	cout<<"THE NUMBER OF LINES NOT STARTING with A are="<<count;
	reader.close();
}

======================================================================((15))========================================================
CODE-15: Create a program in Cpp to store Parking tickets for vehicles in a Shopping Mall Parking Lot. It should have features like 
raising ticket and finding vehicle based in Ticket no.

#include<iostream>
#include<string>
#include<fstream>
#include<ostream>
using namespace std;
void InsertData(int ticketno, string vehicle, string timeentry);
int GetTicketNumber() 
{
	int count = 1;
	ifstream ifs;
	string filename = "ParkingData.csv";
	ifs.open(filename, ios::app);
	string line;
	while (getline(ifs, line))
		++count;
	return count;
}
void GetData()
{
	int ticketno = GetTicketNumber();
	string vehno, timeofentry;
	cout << "Enter Vehicle Number:";
	cin >> vehno;
	cout << "Enter Entry Time:";
	cin >> timeofentry;
	InsertData(ticketno, vehno, timeofentry);
	void InsertData(int ticketno, string vehicle, string timeentry);
	cout << "ENTRY DONE TICKET-ID:"<<ticketno<<endl;
}
void InsertData(int ticketno,string vehicle,string timeentry)
{
	ofstream ofs;
	string filename = "ParkingData.csv";
	ofs.open(filename, ios::app);
	ofs << ticketno << "," << vehicle << "," << timeentry<<"\n";
}
void RetrieveData(int tickno)
{
	ifstream ifs;
	string filename = "ParkingData.csv";
	ifs.open(filename, ios::app);
	string vehino,time,tno;
	while (ifs)
	{
		getline(ifs,tno,',');
		getline(ifs, vehino, ',');
		getline(ifs, time, '\n');
		int ticketno = std::atoi(tno.c_str());
		if (ticketno == tickno)
		{
			cout << "Vehicle Number:" << vehino<<endl;
			cout << "Entry Time:" << time<<endl;
		}
	}
}
string OptionsAvail()
{
	string menu;
	menu += "Welcome To Eternity Mall Parking Lot\n";
	menu += "Enter 1 to Add Vehicle\n";
	menu += "Enter 2 to Find Vehicle\n";
	menu += "Enter 3 to Exit\n";
	menu += "Whats Your Choice:";
	return menu;
}
int main()
{
	int userinp, ticketnum;
	do
	{
		cout << OptionsAvail();
		cin >> userinp;
		switch (userinp)
		{
		case 1:
			GetData();
			break;
		case 2:
			cout << "Enter Ticket Number:";
			cin >> ticketnum;
			RetrieveData(ticketnum);
			break;
		case  3:
			cout << "Thanks For Visiting...!!!";
			break;
		default:
			cout << "Invalid Input";
			break;
		}
	} while (userinp!=3);
}